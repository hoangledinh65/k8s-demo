apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-dp
  labels:
    app: nginx-dp
    tier: frontend-dp
spec:
  replicas: 3
  revisionHistoryLimit: 14
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 0
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        tier: frontend-dp
        app: nginx
      annotations:
        kubernetes.io/change-cause: "update"
    spec:
      nodeSelector:
        kubernetes.io/hostname: ip-192-168-2-36.ap-southeast-1.compute.internal
      containers:
        - name: nginx
          image: nginx
          imagePullPolicy: Always
          # lifecycle:
          #   postStart:
          #     exec:
          #       command: ["/bin/sh", "-c", "hostname > /usr/share/nginx/html/index.html"]
          # env:
          #   - name: nginxenv
          #     valueFrom:
          #       configMapKeyRef:
          #         key: name
          #         name: nginx
          
          # livenessProbe:
          #   httpGet:
          #     path: /index.html
          #     port: 80
          #   initialDelaySeconds: 15
          #   failureThreshold: 5
          #   periodSeconds: 5
          #   successThreshold: 1
          # readinessProbe:
          #   initialDelaySeconds: 15
          #   periodSeconds: 5
          #   successThreshold: 2
          #   failureThreshold: 2
          #   httpGet:
          #     path: /index.html
          #     port: 80
          # resources:
          #   limits:
          #     cpu: "200m"
          #   requests:
          #     cpu: "100m"
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: aws-ebs
        - name: alpine
          image: alpine
          command:
            - "/bin/sh"
          args:
            - "-c"
            - "tail -f /dev/null"
          volumeMounts:
            # - mountPath: /home/mount
            #   name: myvolume
            - mountPath: /usr/share/nginx
              name: aws-ebs
      volumes:
        # - name: myvolume
        #   hostPath:
        #     path: /home
        # - name: emptydemo
        #   emptyDir: {}
        - name: aws-ebs
          persistentVolumeClaim:
            claimName: mypvc
            
            

          
